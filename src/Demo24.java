//ÁªôÂÆö‰∏Ä‰∏™ÈìæË°®Ôºå‰∏§‰∏§‰∫§Êç¢ÂÖ∂‰∏≠Áõ∏ÈÇªÁöÑËäÇÁÇπÔºåÂπ∂ËøîÂõû‰∫§Êç¢ÂêéÁöÑÈìæË°®„ÄÇ
//
// ‰Ω†‰∏çËÉΩÂè™ÊòØÂçïÁ∫ØÁöÑÊîπÂèòËäÇÁÇπÂÜÖÈÉ®ÁöÑÂÄºÔºåËÄåÊòØÈúÄË¶ÅÂÆûÈôÖÁöÑËøõË°åËäÇÁÇπ‰∫§Êç¢„ÄÇ
//
//
//
// Á§∫‰æã:
//
// ÁªôÂÆö 1->2->3->4, ‰Ω†Â∫îËØ•ËøîÂõû 2->1->4->3.
//
// Related Topics ÈìæË°®
// üëç 601 üëé 0


//leetcode submit region begin(Prohibit modification and deletion)
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Demo24 {
    public ListNode swapPairs(ListNode head) {
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        ListNode prevNode = dummy;

        while ((head!=null)&& (head.next!=null)){
            ListNode firstNode = head;
            ListNode secondNode = head.next;

            prevNode.next = secondNode.next;
            firstNode.next = prevNode;
            secondNode.next = firstNode;

            prevNode = firstNode;
            head = secondNode;
        }
        return prevNode.next;
    }
}
//leetcode submit region end(Prohibit modification and deletion)
